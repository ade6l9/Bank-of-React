{"ast":null,"code":"/*==================================================\nsrc/App.js\n\nThis is the top-level component of the app.\nIt contains the top-level state.\n==================================================*/import React,{Component}from'react';import{BrowserRouter as Router,Route}from'react-router-dom';// Import other components\nimport Home from'./components/Home';import UserProfile from'./components/UserProfile';import LogIn from'./components/Login';import Credits from'./components/Credits';import Debits from'./components/Debits';import{jsx as _jsx,jsxs as _jsxs}from\"react/jsx-runtime\";class App extends Component{constructor(){super();this.calculateBalance=(credits,debits)=>{const totalCredits=credits.reduce((sum,credit)=>sum+credit.amount,0);const totalDebits=debits.reduce((sum,debit)=>sum+debit.amount,0);return parseFloat((totalCredits-totalDebits).toFixed(2));};this.addCredit=(description,amount)=>{const newCredit={description,amount:parseFloat(amount),date:new Date().toISOString().split('T')[0]};this.setState(prevState=>{const updatedCredits=[...prevState.credits,newCredit];const updatedBalance=prevState.accountBalance+newCredit.amount;return{credits:updatedCredits,accountBalance:updatedBalance};});};this.addDebit=(description,amount)=>{const newDebit={description,amount:parseFloat(amount),date:new Date().toISOString().split('T')[0]};this.setState(prevState=>{const updatedDebits=[...prevState.debits,newDebit];return{debits:updatedDebits,accountBalance:this.calculateBalance(prevState.credits,updatedDebits)};});};this.mockLogIn=logInInfo=>{const newUser={...this.state.currentUser};newUser.userName=logInInfo.userName;this.setState({currentUser:newUser});};this.state={accountBalance:1234567.89,credits:[],debits:[],currentUser:{userName:'Joe Smith',memberSince:'11/22/99'}};}async componentDidMount(){try{const creditsResponse=await fetch('https://johnnylaicode.github.io/api/credits.json');const credits=await creditsResponse.json();const debitsResponse=await fetch('https://johnnylaicode.github.io/api/debits.json');const debits=await debitsResponse.json();const accountBalance=this.calculateBalance(credits,debits);this.setState({credits,debits,accountBalance});}catch(error){console.error(\"Error fetching data\",error);}}render(){return/*#__PURE__*/_jsx(Router,{basename:\"/bank-of-react-starter-code\",children:/*#__PURE__*/_jsxs(\"div\",{children:[/*#__PURE__*/_jsx(Route,{exact:true,path:\"/\",render:()=>/*#__PURE__*/_jsx(Home,{accountBalance:this.state.accountBalance})}),/*#__PURE__*/_jsx(Route,{exact:true,path:\"/userProfile\",render:()=>/*#__PURE__*/_jsx(UserProfile,{userName:this.state.currentUser.userName,memberSince:this.state.currentUser.memberSince})}),/*#__PURE__*/_jsx(Route,{exact:true,path:\"/login\",render:()=>/*#__PURE__*/_jsx(LogIn,{user:this.state.currentUser,mockLogIn:this.mockLogIn})}),/*#__PURE__*/_jsx(Route,{exact:true,path:\"/credits\",render:()=>/*#__PURE__*/_jsx(Credits,{credits:this.state.credits// Use 'credits' instead of 'creditList'\n,addCredit:this.addCredit,accountBalance:this.state.accountBalance})}),/*#__PURE__*/_jsx(Route,{exact:true,path:\"/debits\",render:()=>/*#__PURE__*/_jsx(Debits,{debits:this.state.debits// Use 'debits' instead of 'debitList'\n,addDebit:this.addDebit,accountBalance:this.state.accountBalance})})]})});}}export default App;","map":{"version":3,"names":["React","Component","BrowserRouter","Router","Route","Home","UserProfile","LogIn","Credits","Debits","jsx","_jsx","jsxs","_jsxs","App","constructor","calculateBalance","credits","debits","totalCredits","reduce","sum","credit","amount","totalDebits","debit","parseFloat","toFixed","addCredit","description","newCredit","date","Date","toISOString","split","setState","prevState","updatedCredits","updatedBalance","accountBalance","addDebit","newDebit","updatedDebits","mockLogIn","logInInfo","newUser","state","currentUser","userName","memberSince","componentDidMount","creditsResponse","fetch","json","debitsResponse","error","console","render","basename","children","exact","path","user"],"sources":["/Users/adelinadautovic/bank-of-react-starter-code/src/App.js"],"sourcesContent":["/*==================================================\nsrc/App.js\n\nThis is the top-level component of the app.\nIt contains the top-level state.\n==================================================*/\nimport React, {Component} from 'react';\nimport {BrowserRouter as Router, Route} from 'react-router-dom';\n\n// Import other components\nimport Home from './components/Home';\nimport UserProfile from './components/UserProfile';\nimport LogIn from './components/Login';\nimport Credits from './components/Credits';\nimport Debits from './components/Debits';\n\nclass App extends Component {\n  constructor() {\n    super();\n    this.state = {\n      accountBalance: 1234567.89,\n      credits: [],    \n      debits: [],     \n      currentUser: {\n        userName: 'Joe Smith',\n        memberSince: '11/22/99',\n      }\n    };\n  }\n\n  async componentDidMount() {\n    try {\n      const creditsResponse = await fetch('https://johnnylaicode.github.io/api/credits.json');\n      const credits = await creditsResponse.json();\n      const debitsResponse = await fetch('https://johnnylaicode.github.io/api/debits.json');\n      const debits = await debitsResponse.json();   \n      \n      const accountBalance = this.calculateBalance(credits, debits);\n      \n      this.setState({ credits, debits, accountBalance });\n    } catch (error) {\n      console.error(\"Error fetching data\", error);\n    }\n  }\n  \n\n  calculateBalance = (credits, debits) => {\n    const totalCredits = credits.reduce((sum, credit) => sum + credit.amount, 0);\n    const totalDebits = debits.reduce((sum, debit) => sum + debit.amount, 0);\n    return parseFloat((totalCredits - totalDebits).toFixed(2));\n  }\n\n  addCredit = (description, amount) => {\n    const newCredit = {\n      description,\n      amount: parseFloat(amount),\n      date: new Date().toISOString().split('T')[0],\n    };\n\n    this.setState((prevState) => {\n      const updatedCredits = [...prevState.credits, newCredit];\n      const updatedBalance = prevState.accountBalance + newCredit.amount;\n      return { credits: updatedCredits, accountBalance: updatedBalance };\n    });\n  }; \n\n  addDebit = (description, amount) => {\n    const newDebit = {\n      description,\n      amount: parseFloat(amount),\n      date: new Date().toISOString().split('T')[0]\n    };\n    \n    this.setState(prevState => {\n      const updatedDebits = [...prevState.debits, newDebit];\n      return {\n        debits: updatedDebits,\n        accountBalance: this.calculateBalance(prevState.credits, updatedDebits)\n      };\n    });\n  };  \n\n  mockLogIn = (logInInfo) => {  \n    const newUser = {...this.state.currentUser};\n    newUser.userName = logInInfo.userName;\n    this.setState({currentUser: newUser})\n  }\n\n  render() {\n    return (\n      <Router basename=\"/bank-of-react-starter-code\">\n        <div>\n          <Route exact path=\"/\" render={() => <Home accountBalance={this.state.accountBalance} />} />\n          <Route exact path=\"/userProfile\" render={() => (\n            <UserProfile \n              userName={this.state.currentUser.userName} \n              memberSince={this.state.currentUser.memberSince} \n            />\n          )} />\n          <Route exact path=\"/login\" render={() => (\n            <LogIn user={this.state.currentUser} mockLogIn={this.mockLogIn} />\n          )} />\n          <Route exact path=\"/credits\" render={() => (\n            <Credits \n              credits={this.state.credits}  // Use 'credits' instead of 'creditList'\n              addCredit={this.addCredit} \n              accountBalance={this.state.accountBalance} \n            />\n          )} />\n          <Route exact path=\"/debits\" render={() => (\n            <Debits \n              debits={this.state.debits}  // Use 'debits' instead of 'debitList'\n              addDebit={this.addDebit} \n              accountBalance={this.state.accountBalance} \n            />\n          )} />\n        </div>\n      </Router>\n    );\n  }\n  \n}\n\nexport default App;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module"}